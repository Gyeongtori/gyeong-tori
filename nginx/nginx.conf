events {}

http {
    limit_req_zone $binary_remote_addr zone=limit_request_per_ip:10m rate=10r/s;

    map $http_user_agent $bad_bot {
        default 0;
        ~*(^MJ12bot|^MJ12bot/v1.4.5|SemrushBot|SemrushBot-SA|DomainCrawler|MegaIndex.ru|AlphaBot|Paros|ZmEu|nikto|dirbuster|sqlmap|openvas|w3af|Morfeus|Zollard|Arachni|Brutus|bsqlbf|Grendel-Scan|Havij|Hydra|N-Stealth|Netsparker|Pangolin|pmafind|webinspect) 1;
    }

    # Jenkins 서브도메인 설정
;     server {
;         listen 80;
;         server_name jenkins.egg-log.org;
;         # 모든 HTTP 요청을 HTTPS로 리다이렉트
;         if ($http_x_forwarded_proto != 'https'){
;             return 301 https://$host$request_uri;
;         }
;         location / {
;              proxy_pass http://127.0.0.1:8081; # Jenkins 서버의 IP와 포트
;              proxy_set_header Host $host;
;              proxy_set_header X-Real-IP $remote_addr;
;              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
;              proxy_set_header X-Forwarded-Proto $scheme;
;          }
;     }

    # 기존 egg-log.org 서버 설정
    server {
        listen 80;
;         server_name egg-log.org www.egg-log.org;
        # 모든 HTTP 요청을 HTTPS로 리다이렉트
;         if ($http_x_forwarded_proto != 'https'){
;             return 301 https://$host$request_uri;
;         }

        location / {
            # 나쁜 봇을 차단
            if ($bad_bot) {
                return 403;
            }

            # 유효하지 않은 호스트 이름을 통한 접근 차단
;             if ($host !~ ^(egg-log\.org|www\.egg-log\.org)$) {
;                 return 444;
;             }

            # app 서비스로 라우팅
            proxy_pass http://front:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        location /api/ {
                    # 나쁜 봇을 차단
                    if ($bad_bot) {
                        return 403;
                    }

                    # 유효하지 않은 호스트 이름을 통한 접근 차단
        ;             if ($host !~ ^(egg-log\.org|www\.egg-log\.org)$) {
        ;                 return 444;
        ;             }

                    # app 서비스로 라우팅
                    proxy_pass http://back:8080/;
                    proxy_set_header Host $host;
                    proxy_set_header X-Real-IP $remote_addr;
                    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                    proxy_set_header X-Forwarded-Proto $scheme;
                }

    }

    # policy.egg-log.org 서버 설정
;     server {
;         listen 80;
;         server_name policy.egg-log.org;
;         # 모든 HTTP 요청을 HTTPS로 리다이렉트
;         if ($http_x_forwarded_proto != 'https'){
;             return 301 https://$host$request_uri;
;         }
;
;         root /usr/share/nginx/html;  # 정적 파일들의 루트 디렉토리
;
;         location / {
;             index privacy_policy.html;       # 인덱스 파일 설정
;
;             # 나쁜 봇을 차단
;             if ($bad_bot) {
;                 return 403;
;             }
;
;             # 유효하지 않은 호스트 이름을 통한 접근 차단
;             if ($host !~ ^policy\.egg-log\.org$) {
;                 return 444;
;             }
;
;             # 추가 보안 설정
;             try_files $uri $uri/ =404;  # 요청된 URI에 해당하는 파일이 없으면 404 에러 반환
;         }
;     }

    # IP와 포트를 통한 직접 접근 차단
    server {
        listen 8080;
        return 444;
    }
}
